@{
	ViewData["10.1"] = "The product is stable under normal conditions of use, storage and transport.";
	ViewData["10.2"] = "Stable under the recommended handling and storage conditions.";
	ViewData["10.3"] = "";
	ViewData["10.4"] = "Avoid heat, sparks, open flames and other ignition sources.";
	ViewData["10.5"] = "Avoid strong acids, alkali or oxidising agents.";
	ViewData["10.6"] = "In case of fire, dangerous decomposition products can be generated, such as carbon monoxide and dioxide and nitrogen fumes and oxides.";
	ViewData["11.1"] = "<b>Acute Toxicity</b><p>Toxic to aquatic organisms, may cause long-term adverse effects in the aquatic environment.</p>"
	+ "<b>Skin corrosion / irritation</b><p>May cause discomfort if swallowed. May cause sensitisation by skin contact.</p>"
	+ "<b>Respiratory or skin sensitisation</b><p>Spray and vapour in the eyes may cause irritation and smarting.</p>"
	+ "<b>Germ Cell Mutagenicity</b><p>In high concentrations, vapours may irritate throat and respiratory system and cause coughing.</p>"
	+ "<b>Carcinogenicity</b><p></p>"
	+ "<b>Reproductive toxicity</b>"
	+ "<b>STOT-single exposure</b>"
	+ "<b>STOT-repeated exposure</b>"
	+ "<b>Aspiration hazard</b>"
	+ "<b>Photo-toxicity</b>"
	+ "<b>Other Information</b>";
	ViewData["12.1"] = "";
	ViewData["12.2"] = "";
	ViewData["12.3"] = "";
	ViewData["12.4"] = "";
	ViewData["12.5"] = "";
	ViewData["12.6"] = "Do not allow product to enter streams, sewers or other waterways.";
	ViewData["13.1"] = "Dispose of in compliance with all local and national regulations.";
	ViewData["14.1"] = "<b>UN No. Road</b><p>UN3082</p>"
	+ "<b>UN No. SEA</b><p>UN3082</p>"
	+ "<b>UN No. AIR</b><p>UN3082</p>";
	ViewData["14.2"] = " ENVIRONMENTALLY HAZARDOUS SUBSTANCE, LIQUID";
	ViewData["14.3"] = "<p>ADR/RID/ADN Class: 9 Miscellaneous dangerous substances and articles.</p>"
	+ "<p>IMDG Class: 9</p>"
	+ "<p>ICAO Class/Division:9</p>"
	+ "<p>Transport Label</p>";
	ViewData["14.4"] = "<p>ADR/RID/ADN Packing group III</p>"
	+ "<p>IMDG Packing group III</p>"
	+ "<p>ICAO Packing group III</p>";
	ViewData["14.5"] = "<p>Environmentally Hazardous Substance/Marine Pollutant.</p>";
	ViewData["14.6"] = "<p>EMS F-A-S-F</p>"
	+ "<p>Emergency Action Code 3Z</p>"
	+ "<p>Hazard No. (ADR) 90 Environmentally hazardous substance; miscellaneous dangerous substances.</p>"
	+ "<p>Tunnel Restriction Code (E)</p>";
	ViewData["14.7"] = "";
	ViewData["15.1"] = "<u>Statutory Instruments</u>"
	+ "<p>The Chemicals (Hazard Information and Packaging for Supply) Regulations 2009 (S.I 2009 No. 716).</p>"
	+ "<u>Guidance Notes</u>"
	+ "<p>CHIP for everyone HSG (108). Workplace Exposure Limits EH40</p>"
	+ "<u>EU Legislation</u>"
	+ "<p>Regulation (EC) No 1907/2006 of the European Parliament and of the Council of 18 December 2006 concerning the Registration, Evaluation, Authorisation and Restriction of Chemicals (REACH), establishing a European Chemicals Agency, amending Directive 1999/45/EC and repealing Council Regulation (EEC) No 793/93 and Commission Regulation (EC) No 1488/94 as well as Council Directive 76/769/EEC and Commission Directives 91/155/EEC, 93/67/EEC, 93/105/EC and 2000/21/EC, including amendments.</p>";
	ViewData["15.2"] = "";
	ViewData["16.1"] = "<b>Hazard and/or Precautionary Statements in Full</b>"
	+ "<p>H318 Causes serious eye damage.</p>"
	+ "<p>H319 Causes serious eye irritation.</p>"
	+ "<p>H315 Causes skin irritation.</p>"
	+ "<p>H226 Flammable liquid and vapour.</p>"
	+ "<p>H304 May be fatal if swallowed and enters airways.</p>"
	+ "<p>H317 May cause an allergic skin reaction.</p>"
	+ "<p>H411 Toxic to aquatic life with long lasting effects.</p>"
	+ "<p>H401 Toxic to aquatic life.</p>"
	+ "<p>H410 Very toxic to aquatic life with long lasting effects.</p>"
	+ "<p>H400 Very toxic to aquatic life.</p>"
	+ "<b>Other Information</b>"
	+ "<p>None.</p>"
	+ "<b>Revision Date</b>"
	+ "<p>07/08/2023</p>"
	+ "<b>Reason for revision</b>"
	+ "<p>Updated Physical</p>"
	+ "<b>Rev No/Repl, SDS Generated</b>"
	+ "<p>02</p>";

}

<style>
	body {
		font-family: Arial, sans-serif;
	}

	.main-title {
		font-weight: bold;
		font-size: 16px;
		margin-bottom: 5px;
		text-decoration:underline;
	}

	table {
		width: 100%;
		border-collapse: collapse;
		border: 1px solid #000;
	}

	.header-row {
		background-color: #002060;
		color: white;
		font-weight: bold;
	}

		.header-row td {
			padding: 5px 10px;
			border: 1px solid #000;
		}

	.content-row td {
		padding: 5px 10px;
		border: 1px solid #000;
		background-color: white;
	}

	.section-number {
		width: 40px;
		font-weight: bold;
	}

	.category-cell {
		width: 35%;
		font-weight: bold;
	}

	.bgBlue{
		background-color: #002060 !important;
		color: white;
	}
</style>

<div id="last-section">
	<div id="section-10" class="mt-3">
		<h2 class="main-title">10. STABILITY AND REACTIVITY</h2>
		<table id="section-10-data" class="mx-3"></table>
	</div>
	<div id="section-11" class="mt-3">
		<h2 class="main-title">11. TOXOLOGICAL INFORMATION</h2>
		<table id="section-11-data" class="mx-3">
		</table>
	</div>
	<div id="section-12" class="mt-3">
		<h2 class="main-title">12. ECOLOGICAL INFORMATION</h2>
		<table id="section-12-data" class="mx-3"></table>
	</div>
	<div id="section-13" class="mt-3">
		<h2 class="main-title">13. DISPOSAL CONSIDERATIONS</h2>
		<table id="section-13-data" class="mx-3"></table>
	</div>
	<div id="section-14" class="mt-3">
		<h2 class="main-title">14. TRANSPORT INFORMATION</h2>
		<table id="section-14-data" class="mx-3">
		</table>
	</div>
	<div id="section-15" class="mt-3">
		<h2 class="main-title">15. REGULATORY INFORMATION</h2>
		<table id="section-15-data" class="mx-3">
		</table>
	</div>
	<div id="section-16" class="mt-3">
		<h2 class="main-title">16. OTHER INFORMATION</h2>
		<table id="section-16-data" class="mx-3">
		</table>
	</div>
</div>

@section Scripts {
	<script>
		function getValueBetweenTags(htmlString, tag) {
		  const regex = new RegExp(`<${tag}[^>]*>(.*?)<\\/${tag}>`, 'i');
		  const match = htmlString.match(regex);
		  return match ? match[1] : null;
		}

		function parseBAndPTags(key, value, htmlString) {
			const tagRegex = new RegExp(`<(${key}|${value})[^>]*>(.*?)<\\/\\1>`, "gi");
			const matches = [...htmlString.matchAll(tagRegex)];

		  const resultMap = new Map();
		  let currentKey = null;

		  for (const match of matches) {
			const tag = match[1].toLowerCase();
			const content = match[2];

			if (tag === key) {
			  currentKey = content;
			  resultMap.set(currentKey, null);
			} else if (tag === value && currentKey) {
			  resultMap.set(currentKey, content);
			  currentKey = null;
			}
		  }

		  return resultMap;
		}

		function printOneLine(no, title, data, important = false){
			let content = `<tr class="header-row">
				<td class="section-number">${no}</td>
				<td colspan="11">${title}</td>
			</tr>`
			let nullText = important ? "No additional data available, but it must be considered that this product may be dangerous for theenvironment." : "No additional data available.";
			if(data == null){
				content += `<tr class="content-row">
					<td style="border-right-color: white !important;"></td>
					<td colspan="11">${nullText}</td>
				</tr>`
			}else if(data.length == 0){
				content += `<tr class="content-row">
					<td style="border-right-color: white !important;"></td>
					<td colspan="11">${nullText}</td>
				</tr>`
			}else{
				content += `<tr class="content-row">
					<td style="border-right-color: white !important;"></td>
					<td colspan="11">${data}</td>
				</tr>`
			}
			return content;
		}

		function printSideBySide(title, data, bgBlue = false){
			let content = `<td colspan="4" class="${bgBlue ? "bgBlue": ""}"><b>${title}</b></td>`
			if(data == null){
				content += `<td colspan="8">No additional data available.</td>`
			}else if(data.length == 0){
				content += `<td colspan="8">No additional data available.</td>`
			}else{
				content += `<td colspan="8">${data}</td>`
			}
			return content;
		}

		function loopDoubleSection(data, bgBlue = false){
			let headerTag = 'b'
			let bodyTag = 'p'
			let content = ''
			if(data == null || data.length == 0){
				content += `<tr class="content-row"><td colspan="11">No additional data available.</td></tr>`
			}else{
				let resultMap = parseBAndPTags(headerTag, bodyTag, data);
				for (const [title, value] of resultMap.entries()) {
					content += `<tr class="content-row">
						${printSideBySide(title, value, bgBlue)}
					</tr>`;
				}
			}
			return content;
		}

		const section10 = document.getElementById("section-10-data");
		section10.innerHTML += printOneLine(10.1, "Reactivity", "@ViewData["10.1"]");
		section10.innerHTML += printOneLine(10.2, "Chemical stability", "@ViewData["10.2"]");
		section10.innerHTML += printOneLine(10.3, "Possible hazardous reactions", "@ViewData["10.3"]");
		section10.innerHTML += printOneLine(10.4, "Conditions to Avoid", "@ViewData["10.4"]");
		section10.innerHTML += printOneLine(10.5, "Incompatible materials", "@ViewData["10.5"]");
		section10.innerHTML += printOneLine(10.6, "Hazardous Decomposition Products", "@ViewData["10.6"]");

		const section11 = document.getElementById("section-11-data");
		section11.innerHTML += `<tr class="header-row">
					<td class="section-number">11.1</td>
					<td colspan="11">Information on toxicological effects</td>
				</tr>`;
		section11.innerHTML += loopDoubleSection("@Html.Raw(ViewData["11.1"])");

		const section12 = document.getElementById("section-12-data");
		section12.innerHTML += printOneLine(12.1, "Toxicity", "@ViewData["12.1"]", true);
		section12.innerHTML += printOneLine(12.2, "Persistence & degradability", "@ViewData["12.2"]");
		section12.innerHTML += printOneLine(12.3, "Bioaccumulation Potential", "@ViewData["12.3"]");
		section12.innerHTML += printOneLine(12.4, "Mobility in soil", "@ViewData["12.4"]");
		section12.innerHTML += printOneLine(12.5, "Results of PBT and vPvB Assessment", "@ViewData["12.5"]");
		section12.innerHTML += printOneLine(12.6, "Other adverse effects", "@ViewData["12.6"]");

		const section13 = document.getElementById("section-13-data");
		section13.innerHTML += printOneLine(13.1, "Waste treatment  methods ", "@ViewData["13.1"]");

		//TODO: handle for images
		const section14 = document.getElementById("section-14-data");
		section14.innerHTML += `<tr class="header-row">
					<td colspan="1" class="section-number">14.1</td>
					<td colspan="11">UN number</td>
				</tr>`;
		section14.innerHTML += loopDoubleSection("@Html.Raw(ViewData["14.1"])", true);
		section14.innerHTML += printOneLine(14.2, "UN proper shipping name", "@Html.Raw(ViewData["14.2"])");
		section14.innerHTML += printOneLine(14.3, "Transport hazard class(es)", "@Html.Raw(ViewData["14.3"])");
		section14.innerHTML += printOneLine(14.4, "Packing group", "@Html.Raw(ViewData["14.4"])");
		section14.innerHTML += printOneLine(14.5, "Environmental hazards", "@Html.Raw(ViewData["14.5"])");
		section14.innerHTML += printOneLine(14.6, "Special precautions for user", "@Html.Raw(ViewData["14.6"])");
		section14.innerHTML += printOneLine(14.7, "Transport in bulk according to Annex II of MARPOL73/78 and the IBC code", "@Html.Raw(ViewData["14.7"])");

		const section15 = document.getElementById("section-15-data");
		section15.innerHTML += printOneLine(15.1, "Safety, health and environmental regulations/legislation specific for the substance or mixture", "@Html.Raw(ViewData["15.1"])");
		section15.innerHTML += printOneLine(15.2, "Chemical safety assessment", "@ViewData["15.2"]");

		const section16 = document.getElementById("section-16-data");
		section16.innerHTML += loopDoubleSection("@Html.Raw(ViewData["16.1"])");
	</script>
}

