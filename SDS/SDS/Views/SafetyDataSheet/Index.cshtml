@* @model IEnumerable<SDS.Models.ProductViewModel> *@
@model ProductListViewModel
@{
    Layout = "_Layout";
    ViewData["Title"] = "Product List";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>Product List</h2>
    <div>
        <a asp-controller="SafetyDataSheet" asp-action="Create" class="btn btn-primary me-2">New Product</a>
    </div>
</div>

<table class="table table-striped table-bordered table-hover shadow-sm">
    <thead>
        <tr>
            <th>No</th>
            <th>Product No</th>
            <th>Product Code</th>
            <th>Product Name</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Model.Products)
        {
            var itemNumber = (Model.CurrentPage - 1) * Model.PageSize + Model.Products.IndexOf(product) + 1;
            <tr>
                <td>@itemNumber</td>
                <td>@product.ProductNo</td>
                <td>@product.ProductCode</td>
                <td>@product.ProductName</td>
                <td>
                    <a asp-action="Create" asp-route-id="@product.ProductNo" class="btn btn-sm btn-primary me-1">Edit</a>
                    @* <a asp-action="Delete" asp-route-id="@product.ProductNo" class="btn btn-sm btn-danger me-1">Delete</a> *@
                    <a asp-action="ExportPdf" asp-route-id="@product.ProductNo" class="btn btn-sm btn-warning">Generate
                        PDF</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="d-flex justify-content-between align-items-center">
    <div>
        <span>Total Products: @Model.TotalItems</span>
    </div>
    <nav aria-label="Page navigation">
        <ul class="pagination">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage - 1 })"
                        aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
            }
            <!-- Replace the pagination for loop with this code for a cleaner UI -->
            @{
                var startPage = Math.Max(1, Model.CurrentPage - 2);
                var endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
            }
            @if (startPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = 1 })">1</a>
                </li>
                @if (startPage > 2)
                {
                    <li class="page-item disabled">
                        <span class="page-link">...</span>
                    </li>
                }
            }
            @for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                </li>
            }
            @if (endPage < Model.TotalPages)
            {
                @if (endPage < Model.TotalPages - 1)
                {
                    <li class="page-item disabled">
                        <span class="page-link">...</span>
                    </li>
                }
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.TotalPages })">@Model.TotalPages</a>
                </li>
            }
            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage + 1 })"
                        aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            }
        </ul>
    </nav>
</div>


@* 
@if (!Model.Any())
{
    <div class="alert alert-info">No products found.</div>
}
else
{
    <table class="table table-bordered table-hover shadow-sm">
        <thead class="table-light">
            <tr>

                <th>Code</th>
                <th>Name</th>
                <th>Actions</th> <!-- Added missing header -->
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.ProductNo</td>
                    <td>@item.ProductCode</td>
                    <td>@item.ProductName</td>
                    <td>
                        <a asp-action="Create" asp-route-id="@item.ProductNo" class="btn btn-sm btn-primary me-1">Edit</a>
                        <a asp-action="Delete" asp-route-id="@item.ProductNo" class="btn btn-sm btn-danger me-1">Delete</a>
                        <a asp-action="ExportPdf" asp-route-id="@item.ProductNo" class="btn btn-sm btn-warning">Generate PDF</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
} *@
